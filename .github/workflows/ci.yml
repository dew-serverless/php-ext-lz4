name: CI

on:
  push:
  pull_request:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, ubuntu-20.04]
        php: ['8.1', '8.2', '8.3', '8.4']
        lz4: ['1.9.2', '1.10.0']

    name: ${{ matrix.os }} - PHP ${{ matrix.php }} - lz4 ${{ matrix.lz4 }}
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    - name: Install lz4
      run: |
        set -xe
        BUILD_DIR="/tmp/build/lz4"
        mkdir -p "$BUILD_DIR"
        curl -sL https://github.com/lz4/lz4/archive/refs/tags/v${{ matrix.lz4}}.tar.gz | \
          tar -zx --strip-components=1 -C "$BUILD_DIR"
        cd "$BUILD_DIR"
        make
        sudo make install
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php }}
    - name: Phpize
      run: phpize
    - name: Configure
      run: ./configure
    - name: Make
      run: make
    - name: Make test
      run: make test

  build-windows:
    strategy:
      fail-fast: false
      matrix:
        include: [
          { os: windows-2019, php: '8.3', lz4: '1.9.4', vs: '14.0' },
        ]

    name: ${{ matrix.os }} - PHP ${{ matrix.php }} - lz4 ${{ matrix.lz4 }}
    runs-on: ${{ matrix.os }}

    steps:

    - uses: actions/checkout@v4
    - name: Download LZ4 Windows Binary Package
      run: |
        $ErrorActionPreference = 'Stop'
        $Lz4Directory = "C:\lz4"
        $Lz4Zip = "lz4.zip"
        New-Item -ItemType Directory -Force -Path $Lz4Directory
        Invoke-WebRequest -Uri "https://github.com/lz4/lz4/releases/download/v$($Lz4Version)/lz4_win64_v$($Lz4Version -replace '\.','_').zip" -OutFile $Lz4Zip
        Expand-Archive -Path $Lz4Zip -DestinationPath $Lz4Directory -Force
        Get-ChildItem $Lz4Directory\dll
        Copy-Item -Path $Lz4Directory\dll\msys-lz4-1.dll -Destination .
    - name: Cache PHP SDK
      id: cache-php-sdk
      uses: actions/cache@v4
      with:
        path: |
          .\php-sdk
          .\php-bin
          .\php-dev
        key: php-sdk-action-0.8-${{ matrix.php }}-vs${{ matrix.vs }}
    - name: Configure System Path for PHP SDK Manually
      if: steps.cache-php-sdk.outputs.cache-hit == 'true'
      run: |
        Add-Content $Env:GITHUB_PATH "$pwd\php-sdk\bin"
        Add-Content $Env:GITHUB_PATH "$pwd\php-sdk\msys2\usr\bin"
        Add-Content $Env:GITHUB_PATH "$pwd\php-bin"
        Add-Content $Env:GITHUB_PATH "$pwd\php-dev"
    - name: Setup PHP SDK
      if: steps.cache-php-sdk.outputs.cache-hit != 'true'
      id: setup-php-sdk
      uses: php/setup-php-sdk@v0.8
      with:
        version: ${{ matrix.php }}
        arch: x64
        ts: nts
    - name: Setup Compiling Environment
      uses: ilammy/msvc-dev-cmd@v1
      with:
        arch: x64
        toolset: ${{ matrix.vs }}
    - run: phpize
    - run: .\configure.bat --with-lz4="C:\lz4" --with-prefix=".\php-bin"
    - run: nmake
    - name: Test
      run: |
        [Environment]::GetEnvironmentVariable('Path')
        nmake test
    - name: Collects Result
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: test-results
        path: php_test_results_*.txt
        if-no-files-found: ignore
